// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Dragon Form Page Render should render correctly create form after load dragon 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-AxheI bzmUgQ"
      >
        <h1
          class="sc-AxjAm gwODik"
        >
          Creating Dragon
        </h1>
        <form
          class="sc-AxhUy iwSbOU"
        >
          <input
            autocomplete="off"
            class="sc-AxhCb hMENDW"
            name="name"
            placeholder="Type dragon name.."
            type="text"
            value=""
          />
          <input
            autocomplete="off"
            class="sc-AxhCb hMENDW"
            name="kind"
            placeholder="Type dragon kind.."
            type="text"
            value=""
          />
          <button
            class="sc-AxgMl fgEWzF"
            type="submit"
          >
            Entrar
          </button>
        </form>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-AxheI bzmUgQ"
    >
      <h1
        class="sc-AxjAm gwODik"
      >
        Creating Dragon
      </h1>
      <form
        class="sc-AxhUy iwSbOU"
      >
        <input
          autocomplete="off"
          class="sc-AxhCb hMENDW"
          name="name"
          placeholder="Type dragon name.."
          type="text"
          value=""
        />
        <input
          autocomplete="off"
          class="sc-AxhCb hMENDW"
          name="kind"
          placeholder="Type dragon kind.."
          type="text"
          value=""
        />
        <button
          class="sc-AxgMl fgEWzF"
          type="submit"
        >
          Entrar
        </button>
      </form>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`Testing Dragon Form Page Render should render correctly edit form after load dragon 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        class="sc-AxheI bzmUgQ"
      >
        <h1
          class="sc-AxjAm gwODik"
        >
          Editing Dragon
        </h1>
        <form
          class="sc-AxhUy iwSbOU"
        >
          <input
            autocomplete="off"
            class="sc-AxhCb hMENDW"
            name="name"
            placeholder="Type dragon name.."
            type="text"
            value="Green Dragon"
          />
          <input
            autocomplete="off"
            class="sc-AxhCb hMENDW"
            name="kind"
            placeholder="Type dragon kind.."
            type="text"
            value="Green"
          />
          <input
            autocomplete="off"
            class="sc-AxhCb hMENDW"
            disabled=""
            name="createAt"
            type="text"
            value="5/24/2020 6:45:33 AM"
          />
          <button
            class="sc-AxgMl fgEWzF"
            type="submit"
          >
            Entrar
          </button>
        </form>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      class="sc-AxheI bzmUgQ"
    >
      <h1
        class="sc-AxjAm gwODik"
      >
        Editing Dragon
      </h1>
      <form
        class="sc-AxhUy iwSbOU"
      >
        <input
          autocomplete="off"
          class="sc-AxhCb hMENDW"
          name="name"
          placeholder="Type dragon name.."
          type="text"
          value="Green Dragon"
        />
        <input
          autocomplete="off"
          class="sc-AxhCb hMENDW"
          name="kind"
          placeholder="Type dragon kind.."
          type="text"
          value="Green"
        />
        <input
          autocomplete="off"
          class="sc-AxhCb hMENDW"
          disabled=""
          name="createAt"
          type="text"
          value="5/24/2020 6:45:33 AM"
        />
        <button
          class="sc-AxgMl fgEWzF"
          type="submit"
        >
          Entrar
        </button>
      </form>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
